model.Task.events.onValidate = function () {				/* 12.Where Does Code Go?				var theClass = this.getDataClass(); //get the dataclass of the entity to save				var theClassName = theClass.getName(); //get the dataclass name				var oldEntity = theClass(this.getKey()); //find the same entity on disk				var sessionRef = currentSession(); // Get session.				var myCurrentUser = currentUser(); // Get the current user.				var myUser = ds.User.find("ID = :1", myCurrentUser.ID);								if (!sessionRef.belongsTo("Manager")) {					if (this.priority != oldEntity.priority) {						return { error : 9998, errorMessage: "You do not have permission to change the priority."};					}				} 				*/								if (currentUser().name == "default guest") {					return {error: 99, errorMessage: "You must sign in to create a task."};				}			};model.Task.events.onRestrictingQuery = function () {				//Task Restricting Query								//Comment out this line if you want to add rules for restricting the task query.				return ds.Task.all();								/* 12. Where Does Code Go?				var myCurrentUser = currentUser(), // we get the user of the current session.					sessionRef = currentSession(), // Get session.					result;									result = ds.Task.createEntityCollection(); //default to empty collection.								if (sessionRef.belongsTo("Manager")) {					result = ds.Task.all();				} else {					result = ds.Task.query("owner.ID = :1", myCurrentUser.ID);				}								return result;				*/;							};model.Task.events.onInit = function () {				/**/				var myCurrentUser = currentUser(), // we get the user of the current session.				myUser = ds.User.find("ID = :1", myCurrentUser.ID);							if ((myCurrentUser !== null) && (myUser !== null)) {//if a user is logged in.							this.owner = myUser;				}								this.dueDate = new Date();				this.complete = false;				this.priority = 3;										};